pico-8 cartridge // http://www.pico-8.com
version 35
__lua__
n=0
camx=0
enmys={}

function _init()
	pl1=kirby(0)
	pl2=kirby(1)
	for i=1,15 do
		add(enmys,dee(70+rnd(90*8),30))
	end
end

function _update()
	pl1.update(pl1)
	pl2.update(pl2)
	for e in all(enmys) do
		e.update(e)
	end
	n+=0.5
	
	camera(camx,0)
	
	if pl1.x > camx+65 and
				((pl2!=nil and pl2.x-4 > camx) or pl2==nil) then
		camx=min(101*8-128,camx+0.2+
							((pl1.x-(camx+64))
							/(64))*1.5)
	elseif pl1.x < camx+63 and
								((pl2!= nil and pl2.x+4 < camx+128) or pl2==nil) then
		camx=max(0,camx-0.2-
							((pl1.x-64-(camx))
							/(64))*-1.5)
	end
end

function _draw()
	cls(12)
	rectfill(35*8,0,48*8-6,4*8,15)
	map()
	pl1.draw(pl1)
	pal(14,8,0)
	pal(4,2,0)
	pl2.draw(pl2)
	pal()
	for e in all(enmys) do
		e.draw(e)
	end
end
-->8
function hit(x,y,w,h)
  local collide=false
  for i=x,x+w,w do
    if (fget(mget(i/8,y/8))>0) or
         (fget(mget(i/8,(y+h)/8))>0) then
          collide=true
    end
  end
  
  for i=y,y+h,h do
    if (fget(mget(x/8,i/8))>0) or
         (fget(mget((x+w)/8,i/8))>0) then
          collide=true
    end
  end
  
  return collide
end

function hitobj(ax,ay,bx,by,h,w)
	local collide = false
	if ax<bx+8 and
				ax+w>bx and
				ay<by+8 and
				ay+h>by then
		collide=true
	end
	return collide
end
-->8
function cloud()
	local c = {}
	c.x=0
	c.y=0
	c.dir=false
	c.spd=2
	c.active=false
	c.timer=0
	
	c.reset = function(o,x,y,dir)
		o.x=x
		o.y=y
		o.dir=dir
		if dir then
			o.spd=-2
			o.x-=4
		else
			o.spd=2
			o.x+=4
		end
		o.timer=0
		o.active=true
	end
	
	c.update = function(o)
		if(o.active) then
			o.x+=o.spd
			if (o.spd>0) then
				o.spd=max(0,o.spd-0.1)
			else
				o.spd=min(0,o.spd+0.1)
			end
			if o.timer>10 then
				o.active=false
			end
			o.timer+=1
		end
	end
	
	c.draw = function(o)
		if(o.active) then
			spr(23,o.x-4,o.y-4,1,1,o.dir)
		end
	end
	
	return c
end

function star()
	local c = {}
	c.x=0
	c.y=0
	c.dir=false
	c.vx=0.5*(c.dir and 1 or -1)
	c.vy=-3
	c.fallspd=0.5
	c.spd=4
	c.sprtspd=0
	c.active=false
	c.sprt=39
	c.hit=false
	c.sizex=2
	c.sizey=2
	
	c.reset = function(o,x,y,dir)
		o.x=x
		o.y=y
		o.dir=dir
		if dir then
			o.spd=-3.5
			o.x-=3
		else
			o.spd=3.5
			o.x+=3
		end
		o.timer=0
		o.active=true
		o.hit=false
		o.sizex=2
		o.sizey=2
	end
	
	c.update = function(o)
		if o.active and not o.hit then
			o.x+=o.spd
			if (o.spd>0) then
				o.spd=max(0,o.spd-0.1)
			else
				o.spd=min(0,o.spd+0.1)
			end
			if abs(o.spd)<0.2 then
				o.active=false
			end
			o.sprt=39+flr((o.sprtspd)%4)*2
		elseif o.hit then
			o.sizex=1
			o.sizey=1
			o.x+=o.vx
			o.y+=o.vy
			o.vy+=o.fallspd
			o.sprt=15+flr((o.sprtspd)%4)*16

			if(o.y > 130) then
				o.hit=false
				o.active=false
			end
		end

		o.sprtspd+=1

		for e in all(enmys) do
			if hitobj(o.x,o.y,e.x,e.y,16,16) then
				e.kill(e)
				o.hit=true
			end
		end
	end
	
	c.draw = function(o)
		if(o.active) then
			spr(o.sprt,o.x,o.y-8,o.sizex,o.sizey,o.dir)
		end
	end
	
	return c
end
-->8
function dust(pl,list)
	local c={}
	c.pl=pl
	c.y=pl.y+rnd(10)-5
	c.list=list
	c.spd=0
	
	if pl.mirr then
		c.x=pl.x-14-rnd(6)+3
	else
		c.x=pl.x+14+rnd(6)-3
	end
	
	c.update = function(o)
		o.x+=sgn(o.pl.x-o.x)*o.spd
		o.y+=sgn(o.pl.y+1-o.y)*0.3
		
		if(o.pl.suck) then
			o.spd+=0.3
		else
		 o.spd=max(0,o.spd-0.1)
		 
		 if(o.spd==0) then
		 	del(list,o)
		 end
		end
		
		if(abs(o.x-o.pl.x)<=4) then
			del(list,o)
		end
	end
	
	c.draw = function(o)
		pset(o.x,o.y)
	end
	
	return c
end
-->8
function kirby(id)
	local c={}
	c.walkspd=2
	c.jmpspd=-2.5
	c.fallspd=4
	c.ground=false
	c.float=false
	c.spit=false
	c.suck=false
	c.inhl=nil
	c.mirr=false
	c.spitbuffer=false
	c.sizex=1
	c.sizey=1
	c.x=20+10*id
	c.y=0
	c.v=0
	c.a=0.2
	c.m=0
	c.sprt=1
	c.cld=cloud()
	c.star=star()
	c.prtcls={}
	c.inhl=nil
	
	c.update = function(o)
		if not o.suck then
			if btn(‚û°Ô∏è,id) then
				if not hit(o.x,o.y,o.walkspd,0) then
					o.x=min(camx+128-4*o.sizex,o.x+o.walkspd)
					o.mirr=false
				else
					while not hit(o.x,o.y,0.1,0) do
						o.x+=0.1
					end
				end
			elseif btn(‚¨ÖÔ∏è,id) then
				o.x=max(camx+4*o.sizex-1,o.x-o.walkspd)
				o.mirr=true
			end
		end
		
		while hit(o.x,o.y,o.sizex*4-2,0) do
			o.x-=0.1
		end
		
		while hit(o.x-o.sizex*4+1,o.y,1,0) do
			o.x+=0.1
		end
		
		if o.ground and not o.float and not o.suck and o.inhl==nil then
			if btn(‚û°Ô∏è,id) or btn(‚¨ÖÔ∏è,id) then
				o.sprt=1+flr(n)%3
				o.sizex=1
			elseif btn(‚¨áÔ∏è,id) then
				o.sprt=48
				o.sizex=2
			else
				o.sizex=1
				o.sprt=1
			end
		elseif o.float or o.inhl!=nil then
			if o.v<0 then
				o.sprt=18
			else
				o.sprt=16
			end
		elseif o.suck then
				o.sprt=22
		else
			if o.v<0 then
				o.sprt=4
			elseif o.v<2 then
				o.sprt=5
			else
				o.sprt=6
			end
		end
		
		if btnp(üÖæÔ∏è,id) and (o.float or o.inhl!=nil) and o.spitbuffer then
			o.float=false
			o.spit=true
			if o.inhl==nil then
				o.cld.reset(o.cld,o.x,o.y,o.mirr)
			else
				o.star.reset(o.star,o.x,o.y,o.mirr)
			end
			o.inhl=nil
			o.spitbuffer=false
			m=0
		end

		if not btn(üÖæÔ∏è,id) then
			o.spitbuffer=true
		else
			o.spitbuffer=false
		end
		
		if btn(üÖæÔ∏è,id) and not o.float and not o.spit and o.inhl==nil then
			o.suck=true
			o.sizey=2
			if o.m>0.4 then
				add(o.prtcls,dust(o,o.prtcls))
			end
			for e in all(enmys) do
				local dir = o.mirr and -1 or 1
				if hitobj(o.x+8*dir,o.y-8,e.x,e.y,16,16) then
					e.enmy.inhl=o
				end
			end
			o.m=min(2,o.m+0.1)
		elseif not o.float and not o.spit then
			if o.inhl==nil then
				o.sizey=1
			end
			o.suck=false
			o.m=0
		end
		
		o.v=min(o.fallspd,o.v+o.a)
		if btnp(‚ùé,id) then
			if (o.inhl!=nil and o.ground) or o.inhl==nil then
				o.v=o.jmpspd
			end
			if not o.ground then
				o.float=true
				o.sizex=2
				o.sizey=2
				o.sprt=16
			end
		end
		
		if not hit(o.x,o.y,0,(o.sizey-1)*4+o.v) then
			o.y+=o.v
			o.ground=false
		else
			while not hit(o.x,o.y,0,(o.sizey-1)*4+0.1) do
				o.y+=0.1
			end
			while hit(o.x,o.y,0,(o.sizey-1)*4) do
				o.y-=0.1
			end
			o.ground=true
			o.v=0
		end
		
		if o.spit then
			o.sprt=20+flr(o.m)*2
			if flr(o.m)==1 then
				o.sizex=1
			elseif flr(o.m)==2 then
				if btn(üÖæÔ∏è,id) then
					o.spit=false
					o.m=0
				else
					o.sizey=1
				end
			end
			o.m+=0.4
			if o.m>=3 then 
				o.spit=false
				o.sizex=1
				o.sizey=1
			end
		end
		
		o.cld.update(o.cld)
		o.star.update(o.star)
		
		for p in all(o.prtcls) do
			p.update(p)
		end
	end
	
	c.draw = function(o)
		spr(o.sprt,o.x-4*o.sizex,
										   o.y-4*o.sizey,
										   o.sizex,
										   o.sizey,
										   o.mirr)
		for p in all(o.prtcls) do
			p.draw(p)
		end
		o.cld.draw(o.cld)
		o.star.draw(o.star)
	end
		
	return c
end
-->8
function dee(x, y)
	local c={}
	c.enmy=enemy(c,x,y)
	c.x=x
	c.y=y
	c.v=0
	c.a=0.2
	c.fallspd=4
	c.ground=false
	c.sprt=7
	c.deathsprt=50
	c.dead=false

	c.kill = function(o)
		o.dead=true
		o.sprt=o.deathsprt
		o.v=1
	end
	
	c.update = function(o)
		o.enmy.update(o.enmy)

		if not o.dead then
			o.v=min(o.fallspd,o.v+o.a)

			if not hit(o.x,o.y,0,o.v) then
				o.y+=o.v
				o.ground=false
			else
				while not hit(o.x,o.y,0,0.1) do
					o.y+=0.1
				end
				while hit(o.x,o.y-1,0,1) do
					o.y-=0.1
				end
				o.ground=true
				o.v=0
			end
		else
			if o.v<=0 then
				o.sprt=9+flr(abs(o.v))*2
				if(o.sprt==15) then
					del(enmys,o)
				end
			end
			
			if o.v>=0 then
				o.x+=o.v
				o.y-=o.v
				o.v-=0.1
			else
				o.v-=0.3
			end
		end
	end
	
	c.draw = function(o)
		if o.dead and o.v<=0 then
			spr(o.sprt,o.x-8,
			o.y-8,
			2,
			2)
		else
			spr(o.sprt,o.x-4,
				o.y-4,
				1,
				1)
		end
	end
	
	return c
end
-->8
function enemy(entt,x,y)
	local c={}
	c.inhl=nil
	c.entt=entt
	c.dead=false
	c.timer=30

	c.update = function(o)
		if o.inhl!=nil then
			o.entt.x+=sgn(o.inhl.x-o.entt.x)*o.inhl.m
			o.entt.y+=sgn(o.inhl.y-o.entt.y)
			
			if abs(o.entt.x-o.inhl.x)<=3 then
				o.inhl.inhl=o
				o.inhl.sizex=2
				o.inhl.sizey=2
				del(enmys,o.entt)
			end
		end
	end

	return c
end
__gfx__
00000000001111000011110000111100011111100111111001111100001111000011110047700000000007740004444044400000004f4f4004f4f40000044000
00000000014eee10014eee10014eee101e4ee4411e4ee441144144100149aa100149aa107447700000077447004ffff4ff4444000ffff7f447777f40444ff400
0070070001ee5e511eee5e5101ee5e511ee5e5411ee5e54111eeee10019a7a71199a7a71744447700774444704f7777f7f4ff44004f77774f77777f04ff77440
000770001eee1e111eee1e111eee1e111ee1e1e11ee1e1e114eeeee1199e4a41149e4a41074444477444447044f7777777777ff40f7777774777777f047777f4
000770001e4ee4e1014ee4e11e4ee4e114ee4ee114ee4e111eeeeee11949aaa10199aaa1074444444444447044f77777f77777f404f777477f47777404f77f40
00700700011eee10141eee11011eee1011eeee100111e1411eeeee41011999101a19991000744444444447000444f477774777f40f477f777777f7f44f7f7400
0000000014411141144111410144141014414100014414411e4ee4411aa111a11aa111a1007444444444470004ff7777777777400004777777777f404444f400
000000001111011101100110001111000111100000111110011111101111011111110111000744444444700044f77777777777f4040ff77777ff4f0000004400
01110111110011000000011111000000000001111100000000000000000044000011110000074444444470004f77777777777f4400f4ff77777ff04000004400
144e14eee4114410000114eee4110000000114eee4110000000000000004aa40014e14100074444444444700047777777777ff4004f77777777740004444f400
14eeeeeeeee414100014eeeeeee410000014eeee1e14100001101100004a47a41eeee14100744444444447004f777477774f44404f7f777777f774f04f7f7400
1eeeeeeeeeee4100014eeeeeeeee4100014eeeeee5e541001ee1ee10004a77741eeeee1007444444444444704f77777f77777f44477774f774777f4004f77f40
01eeeeeeeeeee10001eeeeeeeeeee10001eeeeeee1e1e1001eee1e1004a47774014eee1007444447744444704ff7777777777f44f7777774777777f0047777f4
14eeeeeee5e5e41014eeeeeee5e5e41014eeeeeeeeeee1001e4eeee14a77774001111e107444477007744447044ff4f7f7777f400f77777f47777f404ff77440
1eeeeeeee1e1ee101eeeeeeee1e1ee101eeeeeeeeee1e10001eee141044aa740014411117447700000077447004444ff4ffff40004f777744f7ffff0444ff400
1eeeeeeee1e1ee101eeeeeeee1e1ee101eeeeeeeeeee10001eeeee10000444000011100047700000000007740000044404444000004f4f4004f4f40000044000
1eeeeeee1eeeee101eee4eee1eeeee101eee4eeeeeee10001eeeee10000000044000000000000000044400000444400000044440000044400000000000044000
14eeeeeee111141014ee1eeee111141014ee1eeeeeee10001eeeee100000004ff40000000000000047f4000004fff440044fff4000004f7400000000004ff444
01eeeeee1eeee1000111eeee1eeee1000111eeeeeee1e1001eeeee100000004ff400000000444004f7f4000004fffff44fffff4000004f7f4004440004477ff4
014eeeeeeeee4100014eeeeeeeee4100014eeeeeeeee410014eee1e1000004ffff4000000477f44f77740000004ffffffffff40000004777f44f77404f777740
1414eeeeeee410001414eeeeeee410001414eeeeeee41000014eee41044444ffff44444004f777f777740000004ffffffffff400000047777f777f4004f77f40
144114eee4110000144114eee4110000144114eee4110000011114104ffffffffffffff400477777777f40000004ffffffff40000004f777777774000047f7f4
144141111100000014414111110000001441411111000000014441004ffffffffffffff4004f77777777f4400004ffffffff4000044f77777777f400004f4444
0110110000000000011011000000000001101100000000000011110004ffffffffffff400004f777777777f4004ffffffffff4004f777777777f400000440000
00000000000000000111111000000000000000000000000000000000004ffffffffff400004f777777777f4404ffffffffffff4044f777777777f40000440000
00000000000000001919a1a1000000000000000000000000000000000004ffffffff400004477777777f44004ffffffffffffff40044f77777777440004f4444
00000100000110000197a711000000000000000000000000000000000004ffffffff400004f77777777400004ffffffffffffff40000477777777f400047f7f4
00001e111111e100019e7a7100000000000000000000000000000000004ffffffffff4004f777f7777740000044444ffff4444400000477777f777f404f77f40
0000014ee5e511000149aaa100000000000000000000000000000000004ffffffffff40047ff44f777740000000004ffff400000000047777f44ff744f777740
00001eeee1e1e1000019999a0000000000000000000000000000000004fffff44fffff4004440044f77400000000004ff40000000000477f4400444004477ff4
000014411e441000001aa1a10000000000000000000000000000000004fff440044fff40000000004ff400000000004ff400000000004ff400000000004ff444
00011110011111000001111100000000000000000000000000000000004440000004444000000000044400000000000440000000000044400000000000044000
01111111111111100000000000000000fccfffff333b3311333b3333ffff222222229ffffffff9220000000000000000000fffff000000000000000000000000
11111111111111110000000110000000f7ff77cc3333311133333b33fff2299999922ffffff92222000000000000000ffff99999000000000000000000000000
11133333333331110000001111000000fffcfffc3b331b113b333333ff299999999992ffff922222000000000000fff999999999000000000000000000000000
1133bbbbbbbb33110000011111100000cfccc77f3331b3133313333bf29999222299992ff9222222000000000fff9999999fffff000000000000000000000000
113bbbbbbbbbb311330001111111000077ccfcfc331b331331133333f2992299ff22992ff22222220000000ff999999fffffffff000000000000000000000000
113b33bb33bbb3113330111111110003cccfcccf331b33131b131113299929fffff2999292222222000000f99999ffffffffffff000000000000000000000000
11333333333333113333111111111033cc7cf7cc31b33311b311313329929fffffff2992222222220000ff9999ffffffffffffff000000000000000000000000
11333333333333113333311111111333cccccccc31b3311b331331b329929fffffff299222222222000f9999ffffffffffffffff000000000000000000000000
113b3333333b33113333311111bb3333bbbbbbbb331111333313311329929222222f29920000000000f999ffff999f0000000000000000000000000000000000
11333b3333333311333333111bbbb333bfbfbffb313bb313313311312992299999922992000000000f999ffffff999f000000000000000000000000000000000
113333333b33331133333311bbbbbb33bbbbbffb13bbbb311331331b292999999999929200000000f999ffffffff999f00000000000000000000000000000000
1133333b3333331133333333bbbbbb33bfbbbbbb1bbbbbb11331313b22999922229999220000000f999ffffffffff999f0000000000000000000000000000000
1133333333b333113333333bbbbbbbb3bbfffbbf1bbbbbb1331131bb22992299ff229922000000f999ffffffffffff999f000000000000000000000000000000
1133b3333333b3113333333bbbbbbbb3bbffbbbb13bbbb31313313b3299929fffff2999200000f999fffffffffffff9999f00000000000000000000000000000
11333333b3333311333333bbbbbbbbbbfbbbbffb313bb31311111b3129929fffffff299200000f99fffffffffffffff999f00000000000000000000000000000
113333b333333311b3333bbbbbbbbbbbffbfbfbf331111333bbb313129929fffffff29920000f999fffffffffffffff9999f0000000000000000000000000000
11111111113b3333cc777cccbb333bbb7777777700000000000000000000022222200000000f999f9999f000fffff00000000000000000000000000000000000
1111111113333b33ccc777ccbbb333bbb7bb77bb00000000000000000002299999922000000f99ff9999f00099999ffff0000000000000000000000000000000
333333333b33333377c777cc33b333bb7b7bbb7b0000000000000000002999999999920000f999fff9999f00999999999fff0000000000000000000000000000
bbbbbbbb3333333b7ccc77c73bbb33b3cccbcccb0000777700000000029999222299992000f99fff99999f00fffff9999999fff0000000000000000000000000
bbbbbbbb33b333337ccccc773bbbbb33ccccc77c007777770000000002992299ff22992000f99ffff9999f00fffffffff999999f000000000000000000000000
33bb33bb3333b3337c777c773b333b33cccccccc0777777700000000299929fffff299920f99ffff9f9999f0ffffffffffff9999000000000000000000000000
33333333b3333333c777ccc7b333bbb377ccccc7777777770000000029929fffffff29920f99fffff99999f0ffffffffffffff99000000000000000000000000
33333333333333b3c77c777cb33b333bcccccccc777777770000000029929fffffff29920f99ffff9f9999f0ffffffffffffffff000000000000000000000000
3333b333333b3311bbb7f7771113b333cccccccc000000070000077729929fffffff2992f99ffffff9f9999f00000000ffffffff000000000000000000000000
33b3333333333b317bbb7f7731113b33c7cc77cc770077770007777729929fffffff2992f99fffff9f99999f00000000ffffffff000000000000000000000000
33333b333b3333337bbb77bb31113311cccccccc777777770077777729929fffffff2992f99ffffff9f9999f00000000ffffffff000000000000000000000000
333b33333333333b77bb7bb733113113ccccc77c077777770077777729929fffffff2992f99fffffff99999f00000000ffffffff000000000000000000000000
333333b333b333337777bbb73333111377cccccc007777770777777729929fffffff2992f99ffffff9f9999ff0000000ffffffff000000000000000000000000
3333b3333333b333b777bbb713331113cccccccc000077770777777729929fffffff2992f99fffff9f99999f9f000000ffffffff000000000000000000000000
33b33333b3333333bbb7bb7b11131131cc7ccc7c000000770777777729929fffffff2992f99ffffff9f9999f99ff0000ffffffff000000000000000000000000
333333b3333333b3bbbb77bb11113311cccccccc000000070777777729929fffffff2992f99fffffff99999f9999f000ffffffff000000000000000000000000
__gff__
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001010000000101000000000000000000010100000001010000000000000000000101000000000000000000000000000001010000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
7800676800000000000000000000000000000000000000000000000000000000000000797c7c7c595a7c7c7c7c7c7c6a0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006768000000000000000000000000000000000000000000000000000000
7800777800006768000000000000000000000000000000000000000000000000000000797c7c7c697c7c7c7c7c4a4b4c6b6c7b000000000000000000000000000000000000000000000000000000000000000000000000000000000000004a4b4c6b6c7778000000000000000000000000000000000000000000000000000000
7867487800674878000000676800000000004a4b4c6b6c7b00000000000000004a4b4c6b6c4748797c7c7c7c595a7c7c7c7c5b5c0000000000000000000000000000000000000000000000000000000000000000000000000000000000595a7c7c7c7c7778000000000000000000000000000000000000000000000000000000
7877787800777878000000777800000000595a7c7c7c7c5b5c000000000000595a7c7c7c7c7778797c7c7c7c697c7c7c7c7c7c6a0000000000000000000000000000000000000000000000000000000000000000000000000000000000697c7c7c7c7c7778000000000000000000000000000000000000000000000000000000
5877784768777847684243777842434243697c7c7c7c7c7c6a424342434243697c7c7c7c7c7778797c7c7c7c797c7c7c7c7c7c7a4342434243424342434243424342434060604142434243424342434243424342434243424342434243797c7c7c7c7c7778000000000000000000000000000000000000000000000000000000
7877787778777877785253777852535253797c7c7c7c7c7c7a525352535253797c7c7c7c7c7778797c47487c797c7c7c7c7c7c7a5352535253525352535253525352535070705152535253525352535253525352535253525352535253797c7c7c7c7c7778000000000000000000000000000000000000000000000000000000
7877787778777877785454777854545454797c7c7c7c7c7c7a545454545454797c7c7c7c7c7778797c77787c797c7c7c7c7c7c7a5454545454545454545454545454545070705154545454545454545454545454545454545454545454797c7c7c7c7c7778000000000000000000000000000000000000000000000000000000
7877787778575877786464777864646464797c7c7c7c7c7c7a646464646464797c7c7c7c7c7778797c77787c797c7c7c7c7c7c7a6464646464646464646464646464645070707160416464646464646464646464646464646467686464797c497c7c7c7778000000000000000000000000000000000000000000000000000000
785758777877787778626277786768626244444444444444446262626262624444444444447778444477784444444444444444446262626262626262626262626262625070707070516262626262626262626262626262626277786768797c7c7c7c7c7778000000000000000000000000000000000000000000000000000000
787778777877787778727277787778727272727272727272727272727272727272727272727778727277787272727272727272727272727272727272727272727272725070707070517272727272727272727272727272727277787778797c7c7c7c7c7778000000000000000000000000000000000000000000000000000000
7877787778777877786363777877786363636363406041636363636363636363636363636377406060606060606060416363636363636363634060606060606060606061707070707160606060606060606060606060606060606060606060606060606060000000000000000000000000000000000000000000000000000000
7877787778777877787373777877787373737373507051737373737373737373737373737377507070707070707070517373737373737373735070707070707070707070707070707070707070707070707070707070707070707070707070707070707070000000000000000000000000000000000000000000000000000000
6060606060606060606060606060606060606060617071606060606060606060606060606060617070707070707070716060606060606060606170707070707070707070707070707070707070707070707070707070707070707070707070707070707070000000000000000000000000000000000000000000000000000000
4670704546707045467070454670704546707045467070457070454670704546707045467070454670704546707045467070454645467070454670704546707045467045467070454670704546707045454670704546707045467045467070707070707070000000000000000000000000000000000000000000000000000000
5645465556454655564546555645465556454655564546554546555645465556454655564546555645465556454655564546555655564546555645465556454655564555564546555645465556454655555645465556454655564555564546454645464546000000000000000000000000000000000000000000000000000000
5655565556555655565556555655565556555655565556555556555655565556555655565556555655565556555655565556555655565556555655565556555655565555565556555655565556555655555655565556555655565555565556555655565556000000000000000000000000000000000000000000000000000000
